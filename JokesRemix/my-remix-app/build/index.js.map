{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/root.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/films/$filmId.tsx", "../app/api/comments.ts", "../app/api/films.ts", "../app/components/FilmBanner.tsx", "../app/components/CharacterList.tsx", "../app/components/CommentsList.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/films/$filmId/characters.$charactersId.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/films/index.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/index.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/jokes.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/jokes/$jokes.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/jokes/index.tsx", "/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/jokes/new.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "// import { LiveReload, Outlet } from \"@remix-run/react\";\n// import { LinksFunction } from \"@remix-run/node\";\n// import styles from \"./tailwind.css\";\n\n// export const links: LinksFunction = () => {\n//   return [{ rel:'stylesheet', href: styles }];\n// };\n\n// export default function App() {\n//   return (\n//     <html lang=\"en\">\n//       <head>\n//         <meta charSet=\"utf-8\" />\n//         <title>Remix: So great, it's funny!</title>\n//       </head>\n//       <body>\n//       <Outlet />\n//         <LiveReload />\n//       </body>\n//     </html>\n//   );\n// }\n\nimport {\n  Links,\n  \n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from '@remix-run/react';\nimport { LinksFunction } from '@remix-run/node';\nimport type { MetaFunction } from '@remix-run/node';\nimport styles from './tailwind.css';\n\n\nexport const links: LinksFunction = () => {\n  return [{ rel: 'stylesheet', href: styles }];\n}\n\nexport const meta: MetaFunction = () => {\n  return { title: 'Studio Ghibli', description: 'A description' };\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nexport function ErrorBoundary({ error }: any) {\n  console.error(error);\n  return (\n    <html>\n      <head>\n        <title>Oh no!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {/* add the UI you want your users to see */}\n        {error.message}\n        <Scripts />\n      </body>\n    </html>\n  );\n}", "import { LoaderFunction ,ActionFunction, redirect} from \"@remix-run/node\";\nimport { Outlet, useLoaderData } from \"@remix-run/react\";\nimport { getFilmbyID, Film } from \"~/api/films\";\nimport invariant from \"tiny-invariant\";\nimport FilmBanner from \"~/components/FilmBanner\";\nimport CharacterList from \"~/components/CharacterList\";\nimport { MetaFunction } from \"@remix-run/react/dist/routeModules\";\nimport CommentsList from \"~/components/CommentsList\";\nimport { addComment } from \"~/api/comments\";\n\nexport const action: ActionFunction = async ({request, params}) => {\n  invariant(params.filmId, 'expected params.filmId');\n  const body = await request.formData();\n  console.log('body', Object.fromEntries(body))\n\n  const comment = { \n    name: body.get('name') as string,\n    message: body.get('message') as string,\n    filmId: params.filmId\n  } \n\n  const errors = {name: '', message: ''};\n\n  if (!comment.name) { errors.name = 'Please provide your name'; }\n  if (!comment.message) { errors.message = 'Please provide a comment'; }\n  if (errors.name || errors.message) { const values = Object.fromEntries(body); return { errors, values }; }\n\n  await addComment(comment)\n  return redirect(`/films/${params.filmId}`)\n}\n\nexport const meta: MetaFunction = ({ data }) => {\n    return { title: data.title, description: data.description };\n  };\n  \nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.filmId, \"expected params.filmId\");\n  const film = await getFilmbyID(params.filmId);\n  console.log(\"fetching film\", film.title);\n  return film;\n};\n\nexport default function Film() {\n\n  const film = useLoaderData<Film>();\n  return (\n    <div>\n      <FilmBanner film={film}></FilmBanner>\n      <div className=\"p-10\">\n        <p className=\"\">{film.description}</p>\n      </div>\n\n      <div className=\"flex py-5 space-x-5\">\n        <CharacterList characters={film.characters} />\n          <div className=\"flex-1\">\n            <Outlet></Outlet>\n            <CommentsList filmId={film.id} comments={film.comments || []} />\n          </div>\n      </div>\n    </div>\n  );\n}\n\n// import { ActionFunction, LoaderFunction, MetaFunction, Outlet, redirect, useLoaderData } from 'remix';\n// import { getFilmById, Film } from '~/api/films';\n// import invariant from 'tiny-invariant';\n// import FilmBanner from '~/components/FilmBanner';\n// import CharacterList from '~/components/CharacterList';\n// import CommentsList from '~/components/CommentsList';\n// import { addComment } from '~/api/comments';\n\n// export const action: ActionFunction = async ({request, params}) => {\n//   invariant(params.filmId, 'expected params.filmId');\n//   const body = await request.formData();\n\n//   const comment = { \n//     name: body.get('name') as string,\n//     message: body.get('message') as string,\n//     filmId: params.filmId\n//   }\n\n//   const errors = {name: '', message: ''};\n\n//   if (!comment.name) {\n//     errors.name = 'Please provide your name';\n//   }\n\n//   if (!comment.message) {\n//     errors.message = 'Please provide a comment';\n//   }\n\n//   if (errors.name || errors.message) {\n//     const values = Object.fromEntries(body);\n//     return { errors, values }; \n//   }\n\n//   await addComment(comment);\n\n//   return redirect(`/films/${params.filmId}`);\n// }\n\n// export const meta: MetaFunction = ({ data }) => {\n//   return { title: data.title, description: data.description };\n// };\n\n// export const loader: LoaderFunction = async ({ params }) => {\n//   invariant(params.filmId, 'expected params.filmId');\n\n//   const film = await getFilmById(params.filmId);\n\n//   console.log('fetching film... -->', film.title);\n\n//   return film;\n// };\n\n// export default function Film() {\n//   const film = useLoaderData<Film>();\n//   return (\n//     <div>\n//       <FilmBanner film={film} />\n\n//       <div className=\"p-10\">\n//         <p>{film.description}</p>\n\n//         <div className=\"flex py-5 space-x-5\">\n//           <CharacterList characters={film.characters} />\n\n//           <div className=\"flex-1 flex flex-col justify-between\">\n//             <Outlet />\n\n//             <CommentsList filmId={film.id} comments={film.comments || []} />\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }", "export type CommentEntry = {\n    name: string;\n    message: string;\n    filmId: string;\n    id: number;\n  };\n  \n  export async function getComments(filmId: string) {\n    const response = await fetch(\n      `http://localhost:3002/comments?filmId=${filmId}`\n    );\n  \n    return response.json();\n  }\n  \n  export async function addComment(comment: CommentEntry) {\n    const response = await fetch('http://localhost:3002/comments', {\n      method: 'POST',\n      body: JSON.stringify(comment),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  \n    return response.json();\n  }", "import { CommentEntry, getComments } from \"./comments\";\n\nexport type FilmCharacter = {\n    name: string;\n    id: string;\n    gender?: string;\n    hair_color?: string;\n    eye_color?: string;\n    age?: string;\n}\nexport type Film = {\n    id: string;\n    title: string;\n    description: string;\n    original_title: string;\n    image: string;\n    movie_banner: string;\n    people: string[];\n    characters?: FilmCharacter[];\n    comments?: CommentEntry[]\n\n}\n\nexport async function getFilms(title?: string | null) {\n    const response = await fetch('https://ghibliapi.herokuapp.com/films');\n    const films: Film[] = await response.json();\n    return films.filter((film) =>\n        title ? film.title.toLowerCase().includes(title.toLowerCase()) : true\n    );       \n}\n\nexport async function getFilmbyID(filmId:string) {\n    const response = await fetch(`https://ghibliapi.herokuapp.com/films/${filmId}`);\n    const film: Film = await response.json();\n\n    const comments = await getComments(filmId);\n\n    const characters = await Promise.all(\n        film.people\n        .filter((url) => url !== 'https://ghibliapi.herokuapp.com/people/')\n        .map((url) => fetch(url)\n        .then((response) => response.json()))\n    );\n\n    return {...film,  comments, characters};;   \n}\n\nexport async function getFilmCharacters(characterId:string): Promise<FilmCharacter> {\n    const response = await fetch(`https://ghibliapi.herokuapp.com/people/${characterId}`);\n    if (!response.ok) {\n        throw response;\n        // const character: FilmCharacter = await response.json();\n        // return character;\n    }\n    return response.json();\n   \n}\n\n", "import { Link } from '@remix-run/react';\nimport { Film } from '~/api/films';\n\ntype FilmBannerProps = {\n  film: Film;\n};\n\nexport default function FilmBanner({ film }: FilmBannerProps) {\n  return (\n    <div>\n      <div className=\"w-full h-96 overflow-hidden relative\">\n        <div className=\"w-full h-full flex flex-col absolute justify-between items-start\">\n          <Link to=\"/films\" className=\"text-white p-5 text-2xl hover:underline\">\n            Go Back\n          </Link>\n          <div className=\"bg-slate-700/60 p-5\">\n            <div className=\"text-6xl font-bold text-white\">{film.title}</div>\n          </div>\n        </div>\n\n        <img\n          src={film.movie_banner}\n          className=\"w-full h-auto\"\n          style={{ marginTop: -100 }}\n        />\n      </div>\n    </div>\n  );\n}", "import { Link, NavLink } from '@remix-run/react';\nimport { FilmCharacter } from '~/api/films';\n\ntype CharacterListProps = {\n  characters?: FilmCharacter[];\n};\nexport default function CharacterList({ characters }: CharacterListProps) {\n  return (\n    <div className=\"flex-1 max-w-md ml-10\">\n      <h3 className=\"text-3xl\">Characters</h3>\n\n      <ul className=\"flex flex-col space-y-3 my-3\">\n        {characters?.map((character) => (\n          <li>\n            <NavLink\n              to={'characters/' + character.id}\n              prefetch=\"intent\"\n              className={({ isActive }) =>\n                `w-full hover:underline p-3 rounded border border-slate-400 inline-block ${\n                  isActive\n                    ? 'bg-slate-300 text-black font-bold border-2'\n                    : 'text-blue-500 '\n                } `\n              }\n            >\n              {character.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}", "import { Form, useActionData, useTransition } from \"@remix-run/react\";\nimport { useEffect, useRef } from \"react\";\nimport { CommentEntry } from \"~/api/comments\";\n\ntype CommentsListProps = {\n  filmId: string;\n  comments: CommentEntry[];\n};\n\nexport default function CommentsList({ filmId, comments }: CommentsListProps) {\n  const transition = useTransition();\n  const actionData = useActionData();\n\n  let isAdding = \n    transition.state === \"submitting\" &&\n    transition.submission.formData.get(\"_action\") === \"create\";\n  let formRef = useRef;\n\n  // useEffect(() => {\n  //   if (!isAdding) {\n  //     formRef.current.reset();  // Solve the current issue\n  //   }\n  // }, [isAdding]);\n\n  // function PersonItem({ comment }) {\n  //   let isDeleting = \n  //     transition.submission?.formData?.get(\"id\") === comment.id;\n  // }\n\n  const inputStyle = (fieldName: string) =>\n    `border border-slate-400 rounded py-2 px-3 inline-block w-full ${\n      actionData?.errors[fieldName] ? \" border-red-500\" : \"\"\n    }`;\nconsole.log(comments);\n  return (\n    <div>\n      <h2 className=\"text-3xl mb-2\">Community Comments</h2>\n\n      <div className=\"flex flex-col space-y-4 my-3 max-w-3xl\">\n        {comments.map((comment) => (\n          <div key={comment.id} className=\"p-4 rounded border border-slate-400 max-w-3xl\">\n            <div className=\"text-gray-700 font-bold text-xl mb-2\">\n              {comment.name}\n            <button type=\"submit\" name=\"_action\" value=\"delete\" className=\"bg-red-300 hover:bg-red-700 text-white font-bold py-2 px-4 rounded my-2 float-right\">X</button>\n\n            </div>\n            <input type=\"hidden\" name=\"id\" value={comment.id} />\n            <p className=\"text-gray-700\">{comment.message}</p>\n          </div>\n        ))}\n\n        <div className=\"p-4 rounded border border-slate-400\">\n          <Form \n          // ref={formRef} \n          method=\"post\" action={`/films/${filmId}`}>\n            <fieldset disabled={transition.state === \"submitting\"}>\n              <label className=\"inline-block my-2\">Name:</label>\n              <input name=\"name\" type=\"text\" className={inputStyle(\"name\")} />\n              {actionData?.errors.name && (\n                <p className=\"text-red-500\">{actionData.errors.name}</p>\n              )}\n\n              <label className=\"inline-block my-2\">Message:</label>\n              <textarea name=\"message\" className={inputStyle(\"message\")} />\n              {actionData?.errors.message && (\n                <p className=\"text-red-500\">{actionData.errors.message}</p>\n              )}\n\n              <button\n                type=\"submit\"\n                className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded my-2\"\n              >\n                {transition.state === \"submitting\"\n                  ? \"Adding...\"\n                  : \"Add comment\"}\n              </button>\n            </fieldset>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "\n\nimport { json, LoaderFunction, } from '@remix-run/node';\nimport {useCatch, useLoaderData } from '@remix-run/react';\nimport invariant from 'tiny-invariant';\nimport { FilmCharacter, getFilmCharacters } from '~/api/films';\n\nexport let loader: LoaderFunction = async ({ params }) => {\n  invariant(params.charactersId, 'expected params.characterId');\n// throw new Response('not implemented', {status:404});\n  return getFilmCharacters(params.charactersId);\n};\n\nexport default function Character() {\n  const characterDetails = useLoaderData<FilmCharacter>();\n  return (\n    <div className=\"mb-3\">\n      <div className=\"text-3xl mb-2\">Character Details</div>\n      <div className=\"p-4 rounded shadow-lg border\">\n        <div className=\"text-gray-700 font-bold text-xl mb-2\">\n          {characterDetails.name}\n        </div>\n        <ul className=\"py-2\">\n          <li>Gender: {characterDetails.gender}</li>\n          <li>Age: {characterDetails.age}</li>\n          <li>Eye Color: {characterDetails.eye_color}</li>\n          <li>Hair Color: {characterDetails.hair_color}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return (\n      <div className=\"mb-3\">\n        <div className=\"text-3xl mb-2\">Details</div>\n        <div className=\"p-4 rounded shadow-lg border bg-orange-200 border-orange-600\">\n          <div className=\"text-gray-700 font-bold text-xl mb-2\">\n            {caught.statusText}\n          </div>\n          <p>\n            {caught.status} {caught.statusText}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  throw new Error('Unkown error');\n}\n\nexport function ErrorBoundary({ error }: any) {\n  return (\n    <div className=\"mb-3\">\n      <div className=\"text-3xl mb-2\">Details</div>\n      <div className=\"p-4 rounded shadow-lg border bg-rose-200 border-rose-600\">\n        <div className=\"text-gray-700 font-bold text-xl mb-2\">\n          Uh oh... Sorry something went wrong!\n        </div>\n        <p>{error?.message}</p>\n      </div>\n    </div>\n  );\n}", "import { LinksFunction, LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { Form, useLoaderData, Link } from \"@remix-run/react\";\nimport { Film, getFilms } from \"~/api/films\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  const title = url.searchParams.get(\"title\");\n  return getFilms(title);\n};\n\nexport default function FilmsIndex() {\n  const films = useLoaderData<Film[]>();\n  return (\n    <div className=\"p-16 font-sans\">\n      <h1 className=\"text-5xl font-bold text-center\">Studio Ghibli Films</h1>\n\n      <Form reloadDocument method=\"get\" className=\"py-5\">\n        <label className=\"font-bold\">\n          Search{\" \"}\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Type a title...\"\n            className=\"border-2 rounded py-2 px-3\"\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mx-2\"\n        >\n          Search\n        </button>\n      </Form>\n\n      <div className=\"grid grid-cols-4 gap-4\">\n        {films.map((film) => (\n          <Link\n            title={film.title}\n            key={film.id}\n            to={film.id}\n            className=\"hover:shadow-2xl hover:scale-105 hover:font-bold cursor-pointer\"\n            prefetch=\"intent\"\n          >\n            <div>{film.title}</div>\n            <img src={film.image} alt={film.title} />\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const meta: MetaFunction = () => {\n  return { title: \"Films | Studio Ghibli\", description: \"List of films\" };\n};\n\nexport const links: LinksFunction = () => {\n  return [{ rel: \"stylesheet\", href: \"styles\" }];\n};\n", "import { Link } from \"@remix-run/react\";\n\nexport default function IndexRoute() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1 className=\"text-3xl mb-2 ml-10\">Welcome to Remix</h1>\n      <ul>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/blog\"\n            rel=\"noreferrer\"\n            className=\"text-3xl mb-2  ml-20\"\n          >\n            15m Quickstart Blog Tutorial\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/jokes\"\n            rel=\"noreferrer\"\n            className=\"text-3xl mb-2 ml-20\"\n          >\n            Deep Dive Jokes App Tutorial\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            className=\"text-3xl mb-2  ml-20\"\n            href=\"https://remix.run/docs\"\n            rel=\"noreferrer\"\n          >\n            Remix Docs\n          </a>\n        </li>\n        <br></br>\n        <li>\n          <Link\n            to={\"/films\"}\n            className=\"text-3xl mb-2  ml-20 focus:outline-none focus:ring focus:ring-blue-300 hover:bg-blue-600 active:bg-blue-300\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {/* href=\"/films\" */}\n            Films\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={\"/jokes\"}\n            className=\"text-3xl mb-2  ml-20 focus:outline-none focus:ring focus:ring-blue-300 hover:bg-violet-600 active:bg-violet-300\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            {/* href=\"/films\" */}\n            Jokes\n          </Link>\n        </li>\n        \n      </ul>\n    </div>\n  );\n}\n", "import { Outlet } from \"@remix-run/react\";\n\nexport default function JokesRoute() {\n  return (\n    <div>\n      <h1>J\uD83E\uDD2AKES</h1>\n      <main>\n        <Outlet />\n      </main>\n    </div>\n  );\n}", "export default function JokeRoute() {\n    return (\n      <div>\n        <p>Here's your hilarious joke:</p>\n        <p>\n          Why don't you find hippopotamuses hiding in trees?\n          They're really good at it.\n        </p>\n      </div>\n    );\n  }", "export default function JokesIndexRoute() {\n    return (\n      <div className='super'>\n        <p>Here's a random joke:</p>\n        <p>\n          I was wondering why the frisbee was getting bigger,\n          then it hit me.\n        </p>\n      </div>\n    );\n  }", "export default function NewJokeRoute() {\n    return (\n      <div>\n        <p>Add your own hilarious joke</p>\n        <form method=\"post\">\n          <div>\n            <label>\n              Name: <input type=\"text\" name=\"name\" />\n            </label>\n          </div>\n          <div>\n            <label>\n              Content: <textarea name=\"content\" />\n            </label>\n          </div>\n          <div>\n            <button type=\"submit\" className=\"button\">\n              Add\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }", "export default {'version':'f1571380','entry':{'module':'/build/entry.client-5O66PRWU.js','imports':['/build/_shared/chunk-3YJP6BQ7.js','/build/_shared/chunk-O6YYFGCX.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-TERSH4SU.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/films/$filmId':{'id':'routes/films/$filmId','parentId':'root','path':'films/:filmId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/films/$filmId-DCP5ZSO2.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/films/$filmId/characters.$charactersId':{'id':'routes/films/$filmId/characters.$charactersId','parentId':'routes/films/$filmId','path':'characters/:charactersId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/films/$filmId/characters.$charactersId-Q53ZV2DL.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/films/index':{'id':'routes/films/index','parentId':'root','path':'films','index':true,'caseSensitive':undefined,'module':'/build/routes/films/index-ILLI6627.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-OI3EVANB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jokes':{'id':'routes/jokes','parentId':'root','path':'jokes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jokes-CYQNY47F.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jokes/$jokes':{'id':'routes/jokes/$jokes','parentId':'routes/jokes','path':':jokes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jokes/$jokes-QSZNBKA7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jokes/index':{'id':'routes/jokes/index','parentId':'routes/jokes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/jokes/index-GVXLQ5PI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/jokes/new':{'id':'routes/jokes/new','parentId':'routes/jokes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/jokes/new-RH5IH3RJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-F1571380.js'};", "\nimport * as entryServer from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/entry.server.tsx\";\nimport * as route0 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/root.tsx\";\nimport * as route1 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/films/$filmId.tsx\";\nimport * as route2 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/films/$filmId/characters.$charactersId.tsx\";\nimport * as route3 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/films/index.tsx\";\nimport * as route4 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/index.tsx\";\nimport * as route5 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/jokes.tsx\";\nimport * as route6 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/jokes/$jokes.tsx\";\nimport * as route7 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/jokes/index.tsx\";\nimport * as route8 from \"/Users/lagruni/Downloads/TestProjects/JokesRemix/my-remix-app/app/routes/jokes/new.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/films/$filmId\": {\n      id: \"routes/films/$filmId\",\n      parentId: \"root\",\n      path: \"films/:filmId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/films/$filmId/characters.$charactersId\": {\n      id: \"routes/films/$filmId/characters.$charactersId\",\n      parentId: \"routes/films/$filmId\",\n      path: \"characters/:charactersId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/films/index\": {\n      id: \"routes/films/index\",\n      parentId: \"root\",\n      path: \"films\",\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/jokes\": {\n      id: \"routes/jokes\",\n      parentId: \"root\",\n      path: \"jokes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/jokes/$jokes\": {\n      id: \"routes/jokes/$jokes\",\n      parentId: \"routes/jokes\",\n      path: \":jokes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/jokes/index\": {\n      id: \"routes/jokes/index\",\n      parentId: \"routes/jokes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/jokes/new\": {\n      id: \"routes/jokes/new\",\n      parentId: \"routes/jokes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    }\n  };"],
  "mappings": "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",
  "names": []
}
